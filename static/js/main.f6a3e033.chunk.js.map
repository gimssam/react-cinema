{"version":3,"sources":["components/Navigation.js","components/Movie.js","routes/Home.js","routes/images/god_poster_small.jpg","routes/About.js","routes/Detail.js","App.js","index.js"],"names":["Navigation","className","to","Movie","year","title","summary","poster","genres","rating","posterLarge","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","large_cover_image","Component","About","poster_small","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6a3e033.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css'\r\nfunction Navigation(){\r\n    return (\r\n        <nav className=\"nav\">\r\n            {/* 기본 href의 문제점 = 링크시 페이지 전체가 새로고침되고(리액트 부분 반영장점 없어짐), \r\n                                  HashRouter도 제대로 작동안됨(/about#/으로 나옴) */}\r\n            {/* 해결=react-router-dom의 Link 컴포넌트 사용하면 됨 */}\r\n            {/* <a href=\"/\">Home</a> */}\r\n            <Link to=\"/\">Home</Link> &nbsp;&nbsp;&nbsp;\r\n            <Link to=\"/about\">About</Link>\r\n        </nav>\r\n    );\r\n};\r\nexport default Navigation;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './Movie.css';\r\n//  최종 1. 영화상세페이지 만들기 위한 라우터 패키지 도구 import = Link컴포넌트 사용\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Movie({year, title, summary, poster, genres, rating, posterLarge}){\r\n    return(\r\n        <div className=\"movie\">\r\n            {/* 최종 2. 객체를 전달 : <Link to={{pathname: 'URL', state: 'route props에 보내줄 데이터'}}></Link> */}\r\n            {/* 영화상세페이지 사용을 위한 Link컴포넌트 사용 | state:는 route props에 보내줄 데이터 */}\r\n            <Link to={{pathname: \"/movie-detail\", state: {year, title, summary, posterLarge, genres, rating},}}>\r\n            {/* 영화카드를 클릭하면 /movie-detail(=Detail) 컴포넌트로 이동(=데이터와 함께)하게 될 것임 */}\r\n            {/* 만약, console에서 state값이 undefined 나오면 (npm start=앱) 다시 시작하면 됨 */}\r\n                <img src={poster} alt={title} title={title} />\r\n                <div className=\"movie_data\">\r\n                    <h2 className=\"movie_title\">{ title }</h2>\r\n                    <p className=\"movie_year\">{ year }</p>\r\n                    <ul>\r\n                        { genres.map((genre,index)=>{\r\n                            return <li className=\"movie_genre\" key={index}>{ genre }</li>\r\n                        }) }\r\n                    </ul>\r\n                    {/* <p className=\"movie_rating\">{ rating }/10</p> */}\r\n                    {/* 최종. 시놉시스 180자로 제한 = slice(배열시작인덱스,배열끝인덱스앞까지) */}\r\n                    <p className=\"movie_data\">{ summary.slice(0,180) }...</p>\r\n\r\n                    <p className=\"movie_rating\">{rating}/10</p>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\n// propTypes로 데이터 유효성 체크하기\r\nMovie.propTypes = {\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    posterLarge: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\nexport default Movie;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Movie from '../components/Movie';\r\nimport './Home.css';\r\nimport './css/font.css';\r\nclass Home extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state\r\n    return (\r\n      <section className=\"container\">\r\n        { isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading......</span>\r\n          </div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              {/* 배열값이 있을경우 { API배열데이터.map(map배열변수=>()) } */}\r\n              { movies.map(movie=>(\r\n                <Movie \r\n                  key = {movie.id}\r\n                  id = {movie.id}\r\n                  year = {movie.year}\r\n                  title = {movie.title}\r\n                  summary = {movie.summary}\r\n                  poster = {movie.medium_cover_image}\r\n                  posterLarge = {movie.large_cover_image}\r\n                  genres = {movie.genres}\r\n                  rating= {movie.rating}\r\n                />\r\n              )) }\r\n            </div>\r\n            ) }\r\n      </section>\r\n    );\r\n  };\r\n\r\n  getMovies = async () =>{\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\r\n    this.setState( { movies: movies, isLoading: false } );\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n}\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/god_poster_small.724b1b0b.jpg\";","import React from \"react\";\r\nimport './About.css';\r\n// src에 사용할 파일은 반드시 import가 필요 | 이미지도 변수설정후 경로지정후 사용\r\n// import poster from './images/god_poster.jpg';\r\nimport poster_small from './images/god_poster_small.jpg';\r\n\r\nfunction About(){\r\n    const gfa = \"대부포스터\";\r\n    return (\r\n        <div className=\"about_container\">\r\n            <p>\r\n                {/* <img src={poster} alt={'대부포스터'}/> */}\r\n                <img src={poster_small} alt={gfa}/>\r\n            </p>\r\n            <span>\r\n                I'm gonna make him an offer he can't refuse <br />\r\n                절대 거절하지 못할 제안을 하지 <br /><br />\r\n\r\n                Never hate your enemies. It affects your judgement. <br />\r\n                적들을 미워하지 마라. 그러면 판단력이 흐려져. <br /><br />\r\n\r\n                Keep your friends close and your enemies closer <br />\r\n                친구는 가까이 두고, 적은 더 가까이 두어야 한다 <br /><br />\r\n\r\n                Never let anyoe know what your are thinking <br />\r\n                네 생각을 절대 남한테 알려서는 안된다 <br /><br />\r\n\r\n                A man who is not a father to his children can never be a real man <br />\r\n                자기 아이에게 아버지가 아닌 남자는 진정한 남자가 될 수 없다 <br /><br />\r\n\r\n                Life is so beautiful <br />\r\n                인생은 아름다워 <br /><br />\r\n\r\n                Only don't tell me you're innocent. Because it insults my intelligence. Makes me very angry. <br />\r\n                결백하다고 말하지 마. 그건 내 지성을 모독하는거야. 날 굉장히 화나게 만들어. <br /><br />\r\n\r\n                You know the saddest thing about betrayal? It never comes from an enemy. <br />\r\n                배신에 관해 제일 슬픈 사실이 뭔지 알아? 그건 결코 적으로부터 오는게 아니라는 거야. <br /><br />\r\n\r\n                Confidence is silent. Insecurities are loud. <br />\r\n                자신감은 조용하고 불안감은 시끄럽다. <br /><br />\r\n\r\n                Complaining is silly. Either act or forget. <br />\r\n                불평하는건 어리석어. 행동을 취하거나 잊어버려라. <br /><br />\r\n            </span>\r\n            <span> - The God Father, 1972 </span>\r\n        </div>\r\n    );\r\n}\r\nexport default About;","import React, { Component } from \"react\";\nimport \"./Detail.css\";\n\nclass Detail extends Component {\n    componentDidMount() {\n        const { location, history } = this.props;\n        location.state===undefined && (history.push('/'));\n    }\n    \n    // (주의.브라우저 주소 localhost:3000/#/movie-detail로 접속시는 에러남)\n    // 이유 : render() 함수 실행 후 componentDitMount()가 실행되기때문에 render()의 값을 못 받아옴 = undefined\n    // 해결방법 : render()함수에도 componentDitMount()에 작성한 리다이넥트 코드 추가해 주어야 함\n    render() {\n        const { location } = this.props;\n        // #1-1. if문 : return () 안의 JSX 내에서는 사용 불가능\n        // 복잡한 if문 사용할때는 JSX밖에서 사용하거니, 즉시실행함수 = function(if{}else{});로 사용\n        // 그래서 여기서는 if문을 바깔쪽에 쓰고 실행문 영역에 return()을 써주고 안쪽에 코딩\n        // if(location.state){\n            //     return(\n                //         // f-a. 일단 Movie에서 보낸 location.state props에서 넘어온 데이터 중 영화 제목만 일단 출력 \n                //         // f-b. 그후 Movie에서 보낸 location.state props에서 넘어온 데이터 중 원하는거 모두 출력 \n                //         <ul>\n                //             <li><img src={ location.state.poster } alt={ location.state.title } /></li>\n                //             <li>{ location.state.title }</li>\n                //             <li>{ location.state.year }</li>\n                //             <li>{ location.state.genres }</li>\n                //             <li>{ location.state.summary }</li>\n                //             <li>{ location.state.rating }</li>\n                //         </ul>\n                //     );\n                // }else{\n                    //     // f-c. 값이 없을경우(브라우저에 바로 주소치고 들어갔을때 null반환 \n                    //     // 즉, render()함수 종료후 componentDitMount의 리다이렉트 실행되고 Home컴포넌트로 이동\n                    //     return null;\n                    // }\n        // #1-2. 삼항조건연산자 사용\n            // return(<>{location.state?('aaa'):(\"bbb\")}</>);\n            return(\n                <div className=\"detail\">{ location.state ? (\n                    <ul>\n                        <li><img src={ location.state.posterLarge } alt={ location.state.title } /></li>\n                        <li>{ location.state.title }</li>\n                        <li>{ location.state.year }</li>\n                        <li>{ location.state.genres }</li>\n                        <li>{ location.state.summary }</li>\n                        <li><span  className=\"fontColorRed\">{ location.state.rating }</span> / 10</li>\n                    </ul>\n                ) : (null)}\n                </div>);\n\n}\n}\n\nexport default Detail;","import React from \"react\";\nimport './App.css';\nimport { HashRouter,  Route } from \"react-router-dom\";\nimport Navigation from './components/Navigation';\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\n//1. Detail 컴포넌트 추가\nimport Detail from \"./routes/Detail\";\n\n\nfunction App(){\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      {/* 2. 링크될 컴포넌트 라우터 추가 */}\n      <Route path=\"/movie-detail\" component={Detail}/>\n      {/* 3. Movie 컴포넌트에 Link to로 경로와 넘길 props값 지정해줌 */}\n    </HashRouter>\n  );\n}\nexport default App;\n\n// 영화 상세정보 기능 = 포스터 클릭시 영화상세정보 나오게 하기\n// route props 이해해야 함 : 라우팅 대상이 되는 컴포넌트(링크로 가는 컴포넌트들)에 넘겨주는 기본 props \n// 지정하지 않아도 기본으로 넘어가는 route props가 있음 = 여러값들이 넘어감 , console.log(props) 찍어보면 나옴\n// route props에 데이터를 props에 맘대로 담아서 데이터를 넘길수 있음","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}